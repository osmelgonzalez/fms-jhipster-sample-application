package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GuardianAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGuardianAllPropertiesEquals(Guardian expected, Guardian actual) {
        assertGuardianAutoGeneratedPropertiesEquals(expected, actual);
        assertGuardianAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGuardianAllUpdatablePropertiesEquals(Guardian expected, Guardian actual) {
        assertGuardianUpdatableFieldsEquals(expected, actual);
        assertGuardianUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGuardianAutoGeneratedPropertiesEquals(Guardian expected, Guardian actual) {
        assertThat(actual)
            .as("Verify Guardian auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGuardianUpdatableFieldsEquals(Guardian expected, Guardian actual) {
        assertThat(actual)
            .as("Verify Guardian relevant properties")
            .satisfies(a -> assertThat(a.getFirstName()).as("check firstName").isEqualTo(expected.getFirstName()))
            .satisfies(a -> assertThat(a.getMiddleInitial()).as("check middleInitial").isEqualTo(expected.getMiddleInitial()))
            .satisfies(a -> assertThat(a.getLastName()).as("check lastName").isEqualTo(expected.getLastName()))
            .satisfies(a ->
                assertThat(a.getRelationshipToPlayer()).as("check relationshipToPlayer").isEqualTo(expected.getRelationshipToPlayer())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGuardianUpdatableRelationshipsEquals(Guardian expected, Guardian actual) {
        assertThat(actual)
            .as("Verify Guardian relationships")
            .satisfies(a -> assertThat(a.getPlayers()).as("check players").isEqualTo(expected.getPlayers()));
    }
}
