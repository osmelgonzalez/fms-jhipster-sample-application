package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CampAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCampAllPropertiesEquals(Camp expected, Camp actual) {
        assertCampAutoGeneratedPropertiesEquals(expected, actual);
        assertCampAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCampAllUpdatablePropertiesEquals(Camp expected, Camp actual) {
        assertCampUpdatableFieldsEquals(expected, actual);
        assertCampUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCampAutoGeneratedPropertiesEquals(Camp expected, Camp actual) {
        assertThat(actual)
            .as("Verify Camp auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCampUpdatableFieldsEquals(Camp expected, Camp actual) {
        assertThat(actual)
            .as("Verify Camp relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getAdditionalInfo()).as("check additionalInfo").isEqualTo(expected.getAdditionalInfo()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCampUpdatableRelationshipsEquals(Camp expected, Camp actual) {
        assertThat(actual)
            .as("Verify Camp relationships")
            .satisfies(a -> assertThat(a.getImage()).as("check image").isEqualTo(expected.getImage()));
    }
}
