package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SeasonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSeasonAllPropertiesEquals(Season expected, Season actual) {
        assertSeasonAutoGeneratedPropertiesEquals(expected, actual);
        assertSeasonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSeasonAllUpdatablePropertiesEquals(Season expected, Season actual) {
        assertSeasonUpdatableFieldsEquals(expected, actual);
        assertSeasonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSeasonAutoGeneratedPropertiesEquals(Season expected, Season actual) {
        assertThat(actual)
            .as("Verify Season auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSeasonUpdatableFieldsEquals(Season expected, Season actual) {
        assertThat(actual)
            .as("Verify Season relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getAdditionalInfo()).as("check additionalInfo").isEqualTo(expected.getAdditionalInfo()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getStart()).as("check start").isEqualTo(expected.getStart()))
            .satisfies(a -> assertThat(a.getEnds()).as("check ends").isEqualTo(expected.getEnds()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSeasonUpdatableRelationshipsEquals(Season expected, Season actual) {
        assertThat(actual)
            .as("Verify Season relationships")
            .satisfies(a -> assertThat(a.getImage()).as("check image").isEqualTo(expected.getImage()))
            .satisfies(a -> assertThat(a.getOrganization()).as("check organization").isEqualTo(expected.getOrganization()));
    }
}
